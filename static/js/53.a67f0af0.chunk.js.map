{"version":3,"file":"static/js/53.a67f0af0.chunk.js","mappings":"6LACA,EAA4B,yBAA5B,EAA+D,uBAA/D,EAAkG,yB,8BCErFA,G,QAAe,SAAAC,GACxB,IAAMC,EAAS,CAAC,EAUhB,OARKD,EAAOE,MAEA,4CAA4CC,KAAKH,EAAOE,SAChED,EAAOC,MAAQ,yBAFfD,EAAOC,MAAQ,WAIdF,EAAOI,WACRH,EAAOG,SAAW,YAEfH,CACX,G,UCLMI,EAAY,SAACC,GACf,IAAAC,GAA+BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApCI,EAAMF,EAAA,GAAEG,EAAYH,EAAA,GAE3B,OAAOI,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACVC,cAAe,CACXb,MAAO,GACPE,SAAU,GACVY,YAAY,GAEhBC,SAAUlB,EACVmB,SAAU,SAAClB,EAAQmB,GACfb,EAAMc,MAAMpB,EAAOE,MAAOF,EAAOI,SAAUJ,EAAOgB,YAAY,SAACK,GAC3DT,EAAaS,EACjB,IACAF,EAAQG,cAAc,WAAY,GACtC,EAAEC,UACFC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAAAF,SAAA,EACDV,EAAAA,EAAAA,KAACa,EAAAA,GAAS,CACNC,MAAM,YACNC,KAAK,QACLC,KAAK,OACLC,YAAY,uBAEhBjB,EAAAA,EAAAA,KAACa,EAAAA,GAAS,CACNC,MAAM,cACNC,KAAK,WACLC,KAAK,WACLC,YAAY,yBAEhBjB,EAAAA,EAAAA,KAACkB,EAAAA,GAAQ,CAACH,KAAK,aAAYL,SAAC,kBAG5BV,EAAAA,EAAAA,KAAA,OAAAU,SACKZ,KAELE,EAAAA,EAAAA,KAAA,OAAAU,UACIV,EAAAA,EAAAA,KAAA,UAAAU,SAAQ,iBAIxB,EA+BA,GAAeS,EAAAA,EAAAA,KALS,SAACC,GAAK,MAAM,CAChCC,OAAQD,EAAME,KAAKD,OACnBE,mBAAoBH,EAAME,KAAKC,mBAClC,GAEuC,CAAChB,MAAAA,EAAAA,IAAzC,EA7Bc,SAAHiB,GAAyB,IAApBH,EAAMG,EAANH,OAAQd,EAAKiB,EAALjB,MACpB,OAAIc,GACOrB,EAAAA,EAAAA,KAACyB,EAAAA,GAAQ,CAACC,GAAI,cAElBf,EAAAA,EAAAA,MAAA,OAAKgB,UAAWC,EAAYlB,SAAA,EAC/BC,EAAAA,EAAAA,MAAA,OAAKgB,UAAWC,EAAUlB,SAAA,EACtBV,EAAAA,EAAAA,KAAA,MAAAU,SAAI,WAGJV,EAAAA,EAAAA,KAAA,OAAAU,UACIV,EAAAA,EAAAA,KAACR,EAAS,CAACe,MAAOA,UAG1BI,EAAAA,EAAAA,MAAA,OAAKgB,UAAWC,EAAYlB,SAAA,EACxBV,EAAAA,EAAAA,KAAA,OAAAU,SAAK,wDAGLV,EAAAA,EAAAA,KAAA,OAAAU,SAAK,kDAKjB,G,4HCzEA,G,QAA4B,mCAA5B,EAAsF,8C,kDCKzEG,EAAY,SAAHW,GAAuC,IAAlCV,EAAKU,EAALV,MAAOe,EAAUL,EAAVK,WAAepC,GAAKqC,EAAAA,EAAAA,GAAAN,EAAAO,GAClDC,GAAoBC,EAAAA,EAAAA,IAASxC,GAAMyC,GAAArC,EAAAA,EAAAA,GAAAmC,EAAA,GAA9BG,EAAKD,EAAA,GAAEE,EAAIF,EAAA,GAChB,OAAOvB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACHV,EAAAA,EAAAA,KAAA,SAAOqC,QAAS5C,EAAM6C,IAAM7C,EAAMsB,KAAKL,SAAEI,KACzCd,EAAAA,EAAAA,KAAA,SAAAuC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAAOZ,UAAWC,EAAaY,OAAQX,GAAgBM,GAAW1C,IACjE2C,EAAKK,SAAWL,EAAKM,QAAS/B,EAAAA,EAAAA,MAAA,OAAKgB,UAAWC,EAAwBlB,SAAA,CAAC,IAAE0B,EAAKM,MAAM,SAE7F,EAUaxB,EAAW,SAAHyB,GAA8B,IAAzBjC,EAAQiC,EAARjC,SAAajB,GAAKqC,EAAAA,EAAAA,GAAAa,EAAAC,GACxCC,GAAoBZ,EAAAA,EAAAA,KAAQM,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAG9C,GAAK,IAAEuB,KAAM,cAAY8B,GAAAjD,EAAAA,EAAAA,GAAAgD,EAAA,GAArDV,EAAKW,EAAA,GAAEV,EAAIU,EAAA,GAChB,OAAOnC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACHC,EAAAA,EAAAA,MAAA,SAAOgB,UAAU,gBAAejB,SAAA,EAC5BV,EAAAA,EAAAA,KAAA,SAAAuC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAAOvB,KAAM,YAAgBmB,GAAW1C,IAASiB,KAEpD0B,EAAKK,SAAWL,EAAKM,QAAS1C,EAAAA,EAAAA,KAAA,OAAK2B,UAAW,QAAQjB,SAAE0B,EAAKM,UAEtE,C","sources":["webpack://my-app/./src/components/Login/Login.module.css?0ede","utils/Validation.js","components/Login/Login.jsx","webpack://my-app/./src/utils/FormComponents.module.css?c2d9","utils/FormComponents.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Login_container__2a92S\",\"content\":\"Login_content__Cf1JV\",\"loginInfo\":\"Login_loginInfo__TJx40\"};","import {authAPI} from \"../api/api\";\r\n\r\n\r\nexport const syncValidate = values => {\r\n    const errors = {};\r\n\r\n    if (!values.email) {\r\n        errors.email = 'Required';\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n        errors.email = 'Invalid email address';\r\n    }\r\n    if (!values.password) {\r\n        errors.password = 'Required'\r\n    }\r\n    return errors;\r\n};\r\n\r\nexport const asyncValidate = values => {\r\n    authAPI.login(values.email, values.password, values.rememberMe).then(data => {\r\n            const errors = {}\r\n            if (data.resultCode === 1) {\r\n                errors.genericError = 'Incorrect E-mail or password'\r\n            }\r\n            return errors\r\n        }\r\n    )\r\n\r\n}","import React, {useState} from \"react\";\r\nimport {Form, Formik} from \"formik\";\r\nimport {Checkbox, TextInput} from \"../../utils/FormComponents\";\r\nimport s from './Login.module.css'\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/authReducer\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {syncValidate} from \"../../utils/Validation\";\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    const [status, changeStatus] = useState('')\r\n\r\n    return <Formik\r\n        initialValues={{\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        }}\r\n        validate={syncValidate}\r\n        onSubmit={(values, actions) => {\r\n            props.login(values.email, values.password, values.rememberMe, (newStatus) => {\r\n                changeStatus(newStatus)\r\n            })\r\n            actions.setFieldValue('password', '')\r\n        }}>\r\n        <Form>\r\n            <TextInput\r\n                label='E-mail - '\r\n                name='email'\r\n                type='text'\r\n                placeholder='Enter E-mail here'\r\n            />\r\n            <TextInput\r\n                label='Password - '\r\n                name='password'\r\n                type='password'\r\n                placeholder='Enter password here'\r\n            />\r\n            <Checkbox name='rememberMe'>\r\n                Remember me?\r\n            </Checkbox>\r\n            <div>\r\n                {status}\r\n            </div>\r\n            <div>\r\n                <button>Submit</button>\r\n            </div>\r\n        </Form>\r\n    </Formik>\r\n}\r\n\r\nconst Login = ({isAuth, login}) => {\r\n    if (isAuth) {\r\n        return <Navigate to={'/profile'}/>\r\n    }\r\n    return <div className={s.container}>\r\n        <div className={s.content}>\r\n            <h1>\r\n                Login\r\n            </h1>\r\n            <div>\r\n                <LoginForm login={login}/>\r\n            </div>\r\n        </div>\r\n        <div className={s.loginInfo}>\r\n            <div>\r\n                You can test the site with this login information:\r\n            </div>\r\n            <div>Email: free@samuraijs.com\r\n\r\n                Password: free</div>\r\n        </div>\r\n    </div>\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    isAuthErrorToggled: state.auth.isAuthErrorToggled\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login)","// extracted by mini-css-extract-plugin\nexport default {\"textInput\":\"FormComponents_textInput__3Qh+h\",\"textInputErrorMessage\":\"FormComponents_textInputErrorMessage__NARsf\"};","import {useField} from \"formik\";\r\nimport React from \"react\";\r\nimport s from './FormComponents.module.css'\r\n\r\n//TODO empty input boxes after submission\r\n\r\nexport const TextInput = ({label, handleBlur, ...props}) => {\r\n    let [field, meta] = useField(props)\r\n    return <div>\r\n        <label htmlFor={props.id || props.name}>{label}</label>\r\n        <input className={s.textInput} onBlur={handleBlur} {...field} {...props}/>\r\n        {meta.touched && meta.error && <div className={s.textInputErrorMessage}> {meta.error} </div>}\r\n    </div>\r\n}\r\n\r\nexport const SelectInput = ({label, ...props}) => {\r\n    let [field, meta] = useField(props)\r\n    return <div>\r\n        <label htmlFor={props.id || props.name}>{label}</label>\r\n        <select {...field} {...props}/>\r\n        {meta.touched && meta.error && <div className='error'>{meta.error}</div>}\r\n    </div>\r\n}\r\nexport const Checkbox = ({children, ...props}) => {\r\n    let [field, meta] = useField({...props, type: \"checkbox\"})\r\n    return <div>\r\n        <label className='checkBoxInput'>\r\n            <input type={'checkbox'} {...field} {...props}/>{children}\r\n        </label>\r\n        {meta.touched && meta.error && <div className={'error'}>{meta.error}</div>}\r\n    </div>\r\n}\r\n"],"names":["syncValidate","values","errors","email","test","password","LoginForm","props","_useState","useState","_useState2","_slicedToArray","status","changeStatus","_jsx","Formik","initialValues","rememberMe","validate","onSubmit","actions","login","newStatus","setFieldValue","children","_jsxs","Form","TextInput","label","name","type","placeholder","Checkbox","connect","state","isAuth","auth","isAuthErrorToggled","_ref","Navigate","to","className","s","handleBlur","_objectWithoutProperties","_excluded","_useField","useField","_useField2","field","meta","htmlFor","id","_objectSpread","onBlur","touched","error","_ref3","_excluded3","_useField5","_useField6"],"sourceRoot":""}