{"version":3,"file":"static/js/622.a87e3a5c.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Messages/Messages.module.css?62a0","webpack://my-app/./src/components/Messages/DialogItem/DialogItem.module.css?c7c0","components/Messages/DialogItem/DialogItem.jsx","components/Messages/MessageItem/MessageItem.module.css","components/Messages/MessageItem/MessageItem.jsx","components/Messages/Messages.jsx","components/Messages/MessagesContainer.jsx","hoc/withAuthRedirect.js","webpack://my-app/./src/utils/FormComponents.module.css?c2d9","utils/FormComponents.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Messages_dialogs__FAzsb\",\"dialog_items\":\"Messages_dialog_items__YjwRi\",\"active\":\"Messages_active__0txJN\",\"messages\":\"Messages_messages__K+j9B\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"DialogItem_dialog__aPe6I\"};","import s from \"./DialogItem.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n            <img src='https://i.stack.imgur.com/oNqt6.png?s=128&g=1'/>\r\n            <NavLink to={'/messages/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\nexport default DialogItem","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"MessageItem_message__79+5C\"};","import s from \"./MessageItem.module.css\";\r\nimport React from \"react\";\r\n\r\nconst MessageItem = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.text}</div>\r\n    )\r\n}\r\nexport default MessageItem\r\n","import React from \"react\";\r\nimport s from './Messages.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport MessageItem from \"./MessageItem/MessageItem\";\r\nimport {Form, Formik} from \"formik\";\r\nimport {TextInput} from \"../../utils/FormComponents\";\r\n\r\nconst Messages = (props) => {\r\n\r\n    const dialogsMapped = props.dialogsData.map(d => <DialogItem name={d.name} id={d.id}/>)\r\n    const messagesMapped = props.messagesData.map(m => <MessageItem text={m.text}/>)\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialog_items}>\r\n                {dialogsMapped}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesMapped}\r\n                <Formik\r\n                    initialValues={{\r\n                        newMessageText: props.newMessageText\r\n                    }}\r\n                    onSubmit={(values, actions) => {\r\n                        props.updateNewMessageText(values.newMessageText)\r\n                        props.addMessage()\r\n                        actions.setFieldValue('newMessageText', '')\r\n                    }}\r\n                >\r\n                    <Form>\r\n                        <TextInput\r\n                            name={'newMessageText'}\r\n                            placeholder={'Enter message here!'}\r\n                            onBlur={e => {\r\n                                props.updateNewMessageText(e.target.value)\r\n                            }}\r\n                        />\r\n                        <button>Send</button>\r\n                    </Form>\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messages","import {addMessage, updateNewMessageText} from \"../../redux/messagesReducer\";\r\nimport Messages from \"./Messages\";\r\nimport {connect} from \"react-redux\";\r\nimport React from \"react\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nconst MessagesContainer = props => {\r\n        return <Messages {...props}/>\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsData: state.messagesPage.dialogsData,\r\n        messagesData: state.messagesPage.messagesData,\r\n        newMessageText: state.messagesPage._newMessageText\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {addMessage, updateNewMessageText}),\r\n    withAuthRedirect\r\n)(MessagesContainer)","import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component{\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={'/login'}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let mapStateToProps = (state) =>({\r\n        isAuth: state.auth.isAuth\r\n    })\r\n\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"textInput\":\"FormComponents_textInput__3Qh+h\",\"textInputErrorMessage\":\"FormComponents_textInputErrorMessage__NARsf\"};","import {useField} from \"formik\";\r\nimport React from \"react\";\r\nimport s from './FormComponents.module.css'\r\n\r\n//TODO empty input boxes after submission\r\n\r\nexport const TextInput = ({label, handleBlur, ...props}) => {\r\n    let [field, meta] = useField(props)\r\n    return <div>\r\n        <label htmlFor={props.id || props.name}>{label}</label>\r\n        <input className={s.textInput} onBlur={handleBlur} {...field} {...props}/>\r\n        {meta.touched && meta.error && <div className={s.textInputErrorMessage}> {meta.error} </div>}\r\n    </div>\r\n}\r\n\r\nexport const SelectInput = ({label, ...props}) => {\r\n    let [field, meta] = useField(props)\r\n    return <div>\r\n        <label htmlFor={props.id || props.name}>{label}</label>\r\n        <select {...field} {...props}/>\r\n        {meta.touched && meta.error && <div className='error'>{meta.error}</div>}\r\n    </div>\r\n}\r\nexport const Checkbox = ({children, ...props}) => {\r\n    let [field, meta] = useField({...props, type: \"checkbox\"})\r\n    return <div>\r\n        <label className='checkBoxInput'>\r\n            <input type={'checkbox'} {...field} {...props}/>{children}\r\n        </label>\r\n        {meta.touched && meta.error && <div className={'error'}>{meta.error}</div>}\r\n    </div>\r\n}\r\n"],"names":["props","_jsxs","className","s","children","_jsx","src","NavLink","to","id","name","text","dialogsMapped","dialogsData","map","d","DialogItem","messagesMapped","messagesData","m","MessageItem","Formik","initialValues","newMessageText","onSubmit","values","actions","updateNewMessageText","addMessage","setFieldValue","Form","TextInput","placeholder","onBlur","e","target","value","compose","connect","state","messagesPage","_newMessageText","withAuthRedirect","Messages","_objectSpread","Component","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","this","isAuth","Navigate","React","auth","_ref","label","handleBlur","_objectWithoutProperties","_excluded","_useField","useField","_useField2","_slicedToArray","field","meta","htmlFor","touched","error","Checkbox","_ref3","_excluded3","_useField5","type","_useField6"],"sourceRoot":""}