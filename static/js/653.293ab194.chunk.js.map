{"version":3,"file":"static/js/653.293ab194.chunk.js","mappings":"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","sources":["components/Profile/Profile.module.css","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?962c","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-app/./src/components/Profile/AllPosts/AllPosts.module.css?9936","webpack://my-app/./src/components/Profile/AllPosts/Post/Post.module.css?0992","components/Profile/AllPosts/Post/Post.jsx","components/Profile/AllPosts/AllPosts.jsx","components/Profile/AllPosts/AllPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withRouter.js","hoc/withAuthRedirect.js","webpack://my-app/./src/utils/FormComponents.module.css?c2d9","utils/FormComponents.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"bigPicture\":\"ProfileInfo_bigPicture__8xCX2\",\"profile_block\":\"ProfileInfo_profile_block__5gJ0A\",\"multiline\":\"ProfileInfo_multiline__5LmDh\",\"pic\":\"ProfileInfo_pic__KokOx\",\"profile_pic\":\"ProfileInfo_profile_pic__BrvFv\"};","import React, {useEffect, useState} from 'react'\r\nimport s from './ProfileStatus.module.css'\r\n\r\nconst ProfileStatus = ({status, updateStatus}) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [localStatus, setLocalStatus] = useState(status)\r\n\r\n    useEffect( () => {\r\n        setLocalStatus(status)\r\n    }, [status])\r\n\r\n    const activeEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactiveEditMode = () => {\r\n        setEditMode(false)\r\n        updateStatus(localStatus)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setLocalStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return <div>{\r\n        !editMode\r\n            ? <span\r\n                onDoubleClick={activeEditMode}\r\n            >\r\n                {status || 'User haven\\'t set status yet'}\r\n                </span>\r\n            : <input name={'status'} autoFocus={true}\r\n                     onBlur={deactiveEditMode} onChange={onStatusChange}\r\n                     value={localStatus}\r\n            />\r\n    }\r\n\r\n    </div>\r\n}\r\n\r\nexport default ProfileStatus","import s from \"./ProfileInfo.module.css\";\r\nimport React from \"react\";\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport placeholder from '../../../assets/images/user_image_placeholder.png'\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const isLookingForJob = () => {\r\n        if (props.profile.lookingForAJob === true) {\r\n            return <div>\r\n                <p>\r\n                    I'm looking for a job!\r\n                </p>\r\n                {\r\n                    props.profile.lookingForAJobDescription\r\n                }\r\n            </div>\r\n        }\r\n    }\r\n\r\n    const getAllContacts = () => {\r\n        return Object.entries(props.profile.contacts).map(([key, value]) => {\r\n            if (value != null) {\r\n                switch (key) {\r\n                    case 'facebook':\r\n                        return <a href={props.profile.contacts.facebook}>\r\n                            <img className={s.pic}\r\n                                 src={'https://lawshelf.com/assets/img/Facebook%20logo.png'}/>\r\n                        </a>\r\n                    case 'website':\r\n                        return <a href={props.profile.contacts.website}>\r\n                            <img className={s.pic}\r\n                                 src={'https://school-6-kholmsk.ru/wp-content/uploads/2018/09/Иконка-сайта-1024x1024.png'}/>\r\n                        </a>\r\n                    case 'vk':\r\n                        return <a href={props.profile.contacts.vk}>\r\n                            <img className={s.pic}\r\n                                 src={'https://bioschool.pnpi.nrcki.ru/wp-content/uploads/2022/11/vkontakte-png-1024x1024.png'}/>\r\n                        </a>\r\n                    case 'twitter':\r\n                        return <a href={props.profile.contacts.twitter}>\r\n                            <img className={s.pic}\r\n                                 src={'https://www.vhv.rs/dpng/d/551-5511916_2019-pro-exp-media-inc-circle-twitter-logo.png'}/>\r\n                        </a>\r\n                    case 'instagram':\r\n                        return <a href={props.profile.contacts.instagram}>\r\n                            <img className={s.pic}\r\n                                 src={'https://www.accosmetictattooing.com.au/wp-content/uploads/2022/11/instagram-300x300.png'}/>\r\n                        </a>\r\n                    case 'youtube':\r\n                        return <a href={props.profile.contacts.youtube}>\r\n                            <img className={s.pic}\r\n                                 src={'https://w7.pngwing.com/pngs/982/799/png-transparent-youtube-logo-youtube-logo-internet-marketing-subscribe-television-label-text.png'}/>\r\n                        </a>\r\n                    case 'github':\r\n                        return <a href={props.profile.contacts.github}>\r\n                            <img className={s.pic}\r\n                                 src={'https://e7.pngegg.com/pngimages/947/829/png-clipart-gray-and-blue-cat-illustration-github-computer-icons-logo-github-mammal-cat-like-mammal.png'}/>\r\n                        </a>\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={s.profile_block}>\r\n            <div>\r\n                <img src={props.profile.photos.large ? props.profile.photos.large : placeholder}\r\n                     className={s.profile_pic}/>\r\n                <div>\r\n                    {props.profile.fullName}\r\n                </div>\r\n                <div className={s.multiline}>\r\n                    <ProfileStatus status={props.status} updateStatus={props.updateStatus} setStatus={props.setStatus}/>\r\n                </div>\r\n                <div>\r\n                    {isLookingForJob()}\r\n                </div>\r\n                <div>\r\n                    <p>Contact me on:</p>\r\n                    {getAllContacts()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"AllPosts_posts__8paaK\",\"textArea\":\"AllPosts_textArea__0PsBY\",\"posts_block\":\"AllPosts_posts_block__zlH57\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__yGqB2\",\"like\":\"Post_like__GP3CZ\",\"dislike\":\"Post_dislike__oz-Ie\"};","import React, {useState} from \"react\";\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    let [currentRating, setCurrentRating] = useState(props.rating)\r\n    let [isRatedWith, RateWith] = useState(0)\r\n\r\n\r\n    function likePost() {\r\n        switch (isRatedWith){\r\n            case 1:\r\n                setCurrentRating(currentRating - 1)\r\n                RateWith(0)\r\n                break\r\n            default:\r\n                setCurrentRating(props.rating + 1)\r\n                RateWith(1)\r\n                break\r\n        }\r\n    }\r\n\r\n    function dislikePost() {\r\n        switch (isRatedWith){\r\n            case -1:\r\n                setCurrentRating(currentRating + 1)\r\n                RateWith(0)\r\n                break\r\n            default:\r\n                setCurrentRating(props.rating - 1)\r\n                RateWith(-1)\r\n                break\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://cs6.pikabu.ru/avatars/377/v377504.jpg?329968686'></img>\r\n            {props.message}\r\n            <div>\r\n                <button className={s.like} onClick={likePost}>\r\n                    Like\r\n                </button>\r\n                <span>\r\n                    {currentRating}\r\n                </span>\r\n                <button className={s.dislike} onClick={dislikePost}>\r\n                    Dislike\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from \"react\";\r\nimport s from './AllPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {TextInput} from \"../../../utils/FormComponents\";\r\nimport {Form, Formik} from \"formik\";\r\n\r\nconst AllPosts = React.memo(props => {\r\n    const postsMapped = props.postsData.map(x => <Post message={x.message} rating={x.rating}/>)\r\n\r\n    return (\r\n        <div className={s.posts_block}>\r\n            My posts\r\n            <div>\r\n                <Formik\r\n                    initialValues={{\r\n                        newPostText: props.newPostText\r\n                    }}\r\n                    onSubmit={(values, actions) => {\r\n                        if (values.newPostText !== '') {\r\n                            props.updateNewPostText(values.newPostText)\r\n                            props.addPost()\r\n                            actions.setFieldValue('newPostText', '')\r\n                        }\r\n                    }}\r\n                >\r\n                    <Form>\r\n                        <TextInput\r\n                            label={''}\r\n                            name={'newPostText'}\r\n                            type={'textarea'}\r\n                            placeholder={'Enter new post here!'}\r\n                            onBlur={e => {\r\n                                props.updateNewPostText(e.target.value)\r\n                            }}\r\n                        />\r\n                        <div>\r\n                            <button>New post</button>\r\n                        </div>\r\n                    </Form>\r\n                </Formik>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsMapped}\r\n            </div>\r\n        </div>)\r\n})\r\n\r\nexport default AllPosts","import {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../redux/profileReducer\";\r\nimport AllPosts from \"./AllPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage._newPostText\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewPostText: (text) => {\r\n            dispatch(updateNewPostTextActionCreator(text))\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPostActionCreator())\r\n        }\r\n    }\r\n}\r\n\r\nconst AllPostsContainer = connect(mapStateToProps,mapDispatchToProps)(AllPosts)\r\n\r\nexport default AllPostsContainer","import React from \"react\";\r\nimport s from './Profile.module.css'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport AllPostsContainer from \"./AllPosts/AllPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (<div className={s.content}>\r\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} setStatus={props.setStatus}/>\r\n        <AllPostsContainer/>\r\n    </div>)\r\n}\r\n\r\nexport default Profile","import React, {useEffect} from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, getStatus, updateStatus, setStatus} from \"../../redux/profileReducer\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {withRouter} from \"../../hoc/withRouter\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nconst ProfileContainer = props => {\r\n\r\n    useEffect(() => {\r\n        let userId = props.router.params.userId\r\n        if (!userId){\r\n            userId = props.userId\r\n        }\r\n        props.getUserProfile(userId)\r\n        props.getStatus(userId)\r\n    }, [])\r\n\r\n\r\n        return <div>\r\n            <Profile {...props}/>\r\n        </div>\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    userId: state.auth.userId\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, setStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n","import React from \"react\";\r\nimport {useLocation, useNavigate, useParams} from \"react-router-dom\";\r\n\r\nexport const withRouter = (Component) => {\r\n    function ComponentWithRouterProps(props){\r\n        let location = useLocation()\r\n        let navigate = useNavigate()\r\n        let params = useParams()\r\n        return(\r\n            <Component\r\n                {...props}\r\n                router={{location,navigate,params}}\r\n            />\r\n        )\r\n    }\r\n    return ComponentWithRouterProps\r\n}","import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component{\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={'/login'}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let mapStateToProps = (state) =>({\r\n        isAuth: state.auth.isAuth\r\n    })\r\n\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"textInput\":\"FormComponents_textInput__3Qh+h\",\"textInputErrorMessage\":\"FormComponents_textInputErrorMessage__NARsf\"};","import {useField} from \"formik\";\r\nimport React from \"react\";\r\nimport s from './FormComponents.module.css'\r\n\r\n//TODO empty input boxes after submission\r\n\r\nexport const TextInput = ({label, handleBlur, ...props}) => {\r\n    let [field, meta] = useField(props)\r\n    return <div>\r\n        <label htmlFor={props.id || props.name}>{label}</label>\r\n        <input className={s.textInput} onBlur={handleBlur} {...field} {...props}/>\r\n        {meta.touched && meta.error && <div className={s.textInputErrorMessage}> {meta.error} </div>}\r\n    </div>\r\n}\r\n\r\nexport const SelectInput = ({label, ...props}) => {\r\n    let [field, meta] = useField(props)\r\n    return <div>\r\n        <label htmlFor={props.id || props.name}>{label}</label>\r\n        <select {...field} {...props}/>\r\n        {meta.touched && meta.error && <div className='error'>{meta.error}</div>}\r\n    </div>\r\n}\r\nexport const Checkbox = ({children, ...props}) => {\r\n    let [field, meta] = useField({...props, type: \"checkbox\"})\r\n    return <div>\r\n        <label className='checkBoxInput'>\r\n            <input type={'checkbox'} {...field} {...props}/>{children}\r\n        </label>\r\n        {meta.touched && meta.error && <div className={'error'}>{meta.error}</div>}\r\n    </div>\r\n}\r\n"],"names":["_ref","status","updateStatus","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","_useState4","localStatus","setLocalStatus","useEffect","_jsx","children","name","autoFocus","onBlur","onChange","e","currentTarget","value","onDoubleClick","props","profile","Preloader","className","s","_jsxs","src","photos","large","placeholder","fullName","ProfileStatus","setStatus","lookingForAJob","lookingForAJobDescription","isLookingForJob","Object","entries","contacts","map","_ref2","key","href","facebook","website","vk","twitter","instagram","youtube","github","rating","currentRating","setCurrentRating","isRatedWith","RateWith","message","onClick","React","postsMapped","postsData","x","Post","Formik","initialValues","newPostText","onSubmit","values","actions","updateNewPostText","addPost","setFieldValue","Form","TextInput","label","type","target","connect","state","profilePage","_newPostText","dispatch","text","updateNewPostTextActionCreator","addPostActionCreator","AllPosts","content","ProfileInfo","AllPostsContainer","compose","userId","auth","getUserProfile","getStatus","Component","location","useLocation","navigate","useNavigate","params","useParams","_objectSpread","router","withAuthRedirect","Profile","RedirectComponent","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","this","isAuth","Navigate","to","handleBlur","_objectWithoutProperties","_excluded","_useField","useField","_useField2","field","meta","htmlFor","id","touched","error","Checkbox","_ref3","_excluded3","_useField5","_useField6"],"sourceRoot":""}